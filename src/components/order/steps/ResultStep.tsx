import React, { useEffect, useState } from "react";
import { Button } from "@/components/ui/button";
import Icon from "@/components/ui/icon";
import { Progress } from "@/components/ui/progress";
import { useLocation } from "react-router-dom";
import { VideoInfo } from "../payment/types";
import PaymentService from "../payment/services/PaymentService";
import { toast } from "@/components/ui/use-toast";

interface ResultStepProps {
  orderNumber: string;
}

const ResultStep: React.FC<ResultStepProps> = ({ orderNumber }) => {
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –≤–∏–¥–µ–æ –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏
  const [isComplete, setIsComplete] = useState(false);
  const [videoInfo, setVideoInfo] = useState<VideoInfo | null>(null);
  const [processingStage, setProcessingStage] = useState(0);
  const [pollingTimerId, setPollingTimerId] = useState<number | null>(null);
  const [isPollingActive, setIsPollingActive] = useState(false);
  const [uniqueCode, setUniqueCode] = useState<string | null>(null);
  
  // –ü–æ–ª—É—á–∞–µ–º uniquecode –∏–∑ URL
  const location = useLocation();
  
  const processingStages = [
    "–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –Ω–µ–π—Ä–æ—Å–µ—Ç–∏",
    "–ê–Ω–∞–ª–∏–∑ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –≤–∏–¥–µ–æ",
    "–†–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ —Ä–µ—á–∏",
    "–ü–µ—Ä–µ–≤–æ–¥ –∫–æ–Ω—Ç–µ–Ω—Ç–∞",
    "–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –¥–≤–∏–∂–µ–Ω–∏—è –≥—É–±",
    "–§–∏–Ω–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞",
  ];
  
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–ª—É—á–µ–Ω–∏—è –≥–æ—Ç–æ–≤–æ–≥–æ –≤–∏–¥–µ–æ
  const handleVideoReady = (videoData: VideoInfo) => {
    console.log("‚úÖ –ü–æ–ª—É—á–µ–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≥–æ—Ç–æ–≤–æ–º –≤–∏–¥–µ–æ:", videoData);
    setVideoInfo(videoData);
    setIsComplete(true);
    setIsPollingActive(false);
    
    toast({
      title: "–í–∏–¥–µ–æ –≥–æ—Ç–æ–≤–æ",
      description: "–í–∞—à–µ –ø–µ—Ä–µ–≤–µ–¥–µ–Ω–Ω–æ–µ –≤–∏–¥–µ–æ –≥–æ—Ç–æ–≤–æ –∫ —Å–∫–∞—á–∏–≤–∞–Ω–∏—é!",
      variant: "default",
    });
  };

  // –≠—Ñ—Ñ–µ–∫—Ç –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è uniquecode –∏–∑ URL –∏ –∑–∞–ø—É—Å–∫–∞ –ø–æ–ª–ª–∏–Ω–≥–∞
  useEffect(() => {
    const params = new URLSearchParams(location.search);
    const code = params.get("uniquecode");
    
    if (code) {
      console.log("üìã –ù–∞–π–¥–µ–Ω uniquecode –≤ URL:", code);
      setUniqueCode(code);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –≤ localStorage –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≥–æ—Ç–æ–≤–æ–º –≤–∏–¥–µ–æ
      const savedVideoInfo = localStorage.getItem(`video_info_${code}`);
      if (savedVideoInfo) {
        try {
          const parsedInfo = JSON.parse(savedVideoInfo);
          if (parsedInfo.status === 'completed' && parsedInfo.output_url) {
            console.log("üìã –ù–∞–π–¥–µ–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≥–æ—Ç–æ–≤–æ–º –≤–∏–¥–µ–æ –≤ localStorage");
            setVideoInfo(parsedInfo);
            setIsComplete(true);
            return;
          }
        } catch (e) {
          console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–∑–±–æ—Ä–µ –¥–∞–Ω–Ω—ã—Ö –æ –≤–∏–¥–µ–æ –∏–∑ localStorage:", e);
        }
      }
      
      // –ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ–ª–ª–∏–Ω–≥ —Å—Ç–∞—Ç—É—Å–∞ –≤–∏–¥–µ–æ, –µ—Å–ª–∏ –µ–≥–æ –µ—â–µ –Ω–µ—Ç
      if (!isPollingActive && !isComplete && !videoInfo) {
        console.log("üîÑ –ó–∞–ø—É—Å–∫ –ø–æ–ª–ª–∏–Ω–≥–∞ —Å—Ç–∞—Ç—É—Å–∞ –≤–∏–¥–µ–æ...");
        setIsPollingActive(true);
        
        const timerId = PaymentService.startVideoActivationPolling(
          code,
          handleVideoReady
        );
        
        setPollingTimerId(timerId);
      }
    } else {
      console.warn("‚ö†Ô∏è uniquecode –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ URL");
      
      // –ü—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å uniquecode –∏–∑ localStorage
      const savedUniqueCode = localStorage.getItem('paymentUniqueCode');
      if (savedUniqueCode) {
        console.log("üìã –ù–∞–π–¥–µ–Ω uniquecode –≤ localStorage:", savedUniqueCode);
        setUniqueCode(savedUniqueCode);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –≤ localStorage –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≥–æ—Ç–æ–≤–æ–º –≤–∏–¥–µ–æ
        const savedVideoInfo = localStorage.getItem(`video_info_${savedUniqueCode}`);
        if (savedVideoInfo) {
          try {
            const parsedInfo = JSON.parse(savedVideoInfo);
            if (parsedInfo.status === 'completed' && parsedInfo.output_url) {
              console.log("üìã –ù–∞–π–¥–µ–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≥–æ—Ç–æ–≤–æ–º –≤–∏–¥–µ–æ –≤ localStorage");
              setVideoInfo(parsedInfo);
              setIsComplete(true);
              return;
            }
          } catch (e) {
            console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–∑–±–æ—Ä–µ –¥–∞–Ω–Ω—ã—Ö –æ –≤–∏–¥–µ–æ –∏–∑ localStorage:", e);
          }
        }
      }
    }
  }, [location.search, isPollingActive, isComplete, videoInfo]);
  
  // –≠—Ñ—Ñ–µ–∫—Ç –¥–ª—è –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–æ–π —Å–º–µ–Ω—ã —Å—Ç–∞–¥–∏–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏
  useEffect(() => {
    if (isComplete) return;
    
    const stageInterval = setInterval(() => {
      setProcessingStage((prev) => {
        if (prev >= processingStages.length - 1) {
          return 0; // –ó–∞—Ü–∏–∫–ª–∏–≤–∞–µ–º —Å—Ç–∞–¥–∏–∏
        }
        return prev + 1;
      });
    }, 5000);
    
    return () => {
      clearInterval(stageInterval);
    };
  }, [isComplete, processingStages.length]);
  
  // –≠—Ñ—Ñ–µ–∫—Ç –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ —Ç–∞–π–º–µ—Ä–∞ –ø–æ–ª–ª–∏–Ω–≥–∞ –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  useEffect(() => {
    return () => {
      if (pollingTimerId) {
        console.log("üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–æ–ª–ª–∏–Ω–≥–∞ –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞");
        window.clearInterval(pollingTimerId);
      }
    };
  }, [pollingTimerId]);

  const formatOrderNumber = (num: string) => {
    // –ï—Å–ª–∏ –Ω–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞ –∫–æ—Ä–æ—Ç–∫–∏–π, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–∞–∫ –µ—Å—Ç—å
    if (num.length < 6) return num;
    
    // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –Ω–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞ –¥–ª—è –ª—É—á—à–µ–π —á–∏—Ç–∞–±–µ–ª—å–Ω–æ—Å—Ç–∏
    return num.replace(/(\w{3})(\w{3})(\w{3})/, "$1-$2-$3");
  };
  
  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –≤–∏–¥–µ–æ
  const handleDownloadVideo = () => {
    if (videoInfo && videoInfo.output_url) {
      // –°–æ–∑–¥–∞–µ–º —Å—Å—ã–ª–∫—É –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
      const link = document.createElement('a');
      link.href = videoInfo.output_url;
      link.target = '_blank';
      link.download = `translated_video.mp4`;
      document.body.appendChild(link);
      link.click();
      document.body.removeChild(link);
    } else {
      toast({
        title: "–û—à–∏–±–∫–∞",
        description: "–°—Å—ã–ª–∫–∞ –Ω–∞ –≤–∏–¥–µ–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞",
        variant: "destructive",
      });
    }
  };
  
  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –ø–æ–ª–ª–∏–Ω–≥–∞
  const handleRefreshStatus = () => {
    if (!uniqueCode || isComplete || isPollingActive) return;
    
    setIsPollingActive(true);
    
    const timerId = PaymentService.startVideoActivationPolling(
      uniqueCode,
      handleVideoReady
    );
    
    setPollingTimerId(timerId);
    
    toast({
      title: "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞",
      description: "–ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –≤–∞—à–µ–≥–æ –≤–∏–¥–µ–æ...",
      variant: "default",
    });
  };

  return (
    <div className="flex flex-col items-center max-w-lg mx-auto">
      {isComplete && videoInfo ? (
        // –ü–æ–ª–Ω—ã–π —ç–∫—Ä–∞–Ω –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
        <div className="w-full">
          <div className="flex flex-col items-center mb-6">
            <div className="w-16 h-16 bg-green-100 rounded-full flex items-center justify-center mb-4">
              <Icon name="CheckCircle" size={32} className="text-green-600" />
            </div>
            <h3 className="text-xl font-medium text-center mb-2">
              –í–∞—à–µ –≤–∏–¥–µ–æ –≥–æ—Ç–æ–≤–æ!
            </h3>
            <p className="text-muted-foreground text-center">
              –ü–µ—Ä–µ–≤–æ–¥ –≤–∏–¥–µ–æ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω. –í—ã –º–æ–∂–µ—Ç–µ —Å–∫–∞—á–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä—è–º–æ
              —Å–µ–π—á–∞—Å.
            </p>
          </div>

          <div className="border rounded-lg p-4 mb-8">
            <div className="flex flex-col space-y-3">
              <div className="flex justify-between">
                <span className="text-muted-foreground">–ù–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞:</span>
                <span className="font-medium">
                  {formatOrderNumber(orderNumber)}
                </span>
              </div>

              <div className="flex justify-between">
                <span className="text-muted-foreground">–°—Ç–∞—Ç—É—Å:</span>
                <span className="font-medium text-green-600">–ì–æ—Ç–æ–≤–æ</span>
              </div>
              
              <div className="flex justify-between">
                <span className="text-muted-foreground">–Ø–∑—ã–∫ –ø–µ—Ä–µ–≤–æ–¥–∞:</span>
                <span className="font-medium">
                  {videoInfo.output_language.toUpperCase()}
                </span>
              </div>

              <div className="flex justify-between">
                <span className="text-muted-foreground">–°—Ä–æ–∫ —Ö—Ä–∞–Ω–µ–Ω–∏—è:</span>
                <span className="font-medium">7 –¥–Ω–µ–π</span>
              </div>
            </div>
          </div>

          <div className="flex flex-col w-full space-y-4">
            <Button className="w-full py-6" onClick={handleDownloadVideo}>
              <Icon name="Download" className="mr-2" />
              –°–∫–∞—á–∞—Ç—å –≤–∏–¥–µ–æ
            </Button>

            <Button 
              variant="outline" 
              className="w-full"
              onClick={() => window.location.href = '/order?step=0'}
            >
              <Icon name="Plus" className="mr-2" />
              –°–¥–µ–ª–∞—Ç—å –µ—â–µ –æ–¥–∏–Ω –ø–µ—Ä–µ–≤–æ–¥
            </Button>
          </div>
        </div>
      ) : (
        // –≠–∫—Ä–∞–Ω –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏
          <div className="flex flex-col items-center justify-center py-16 text-center">
            <div className="mb-6">
              <Icon
                  name="Loader2"
                  size={60}
                  className="text-primary animate-spin"
              />
            </div>
            <h3 className="text-xl font-medium mb-0">–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤–∞—à–µ –≤–∏–¥–µ–æ</h3>


            {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–∫–∞–∑–µ */}
            {uniqueCode && (
                <div className="border rounded-lg p-4 my-5 w-full max-w-sm">
                  <div className="flex flex-col space-y-3">
                    <div className="flex justify-between">
                      <span className="text-muted-foreground">–ù–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞:</span>
                      <span className="font-medium">
                    {formatOrderNumber(uniqueCode.slice(0, 12)).toUpperCase()}
                  </span>
                    </div>

                    <div className="flex justify-between">
                      <span className="text-muted-foreground">–°—Ç–∞—Ç—É—Å:</span>
                      <span className="font-medium text-amber-600">–í –æ–±—Ä–∞–±–æ—Ç–∫–µ</span>
                    </div>


                  </div>
                </div>
            )}
            <p className="text-muted-foreground max-w-md mx-auto mb-6">
              –ü–µ—Ä–µ–≤–æ–¥ –≤–∏–¥–µ–æ –∑–∞–Ω–∏–º–∞–µ—Ç –ø—Ä–∏–º–µ—Ä–Ω–æ 15 –º–∏–Ω—É—Ç. –í—ã –ø–æ–ª—É—á–∏—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –Ω–∞ –ø–æ—á—Ç—É –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø–µ—Ä–µ–≤–æ–¥–∞.
              –í—ã –º–æ–∂–µ—Ç–µ –∑–∞–∫—Ä—ã—Ç—å —ç—Ç–æ –æ–∫–Ω–æ.
            </p>

            {/* –ö–Ω–æ–ø–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ (–µ—Å–ª–∏ –ø–æ–ª–ª–∏–Ω–≥ –Ω–µ–∞–∫—Ç–∏–≤–µ–Ω) */}
            {!isPollingActive && uniqueCode && (
                <Button
                    variant="outline"
                    size="sm"
                    onClick={handleRefreshStatus}
                    className="mt-2"
                >
                  <Icon name="RefreshCw" className="mr-2 w-4 h-4"/>
                  –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å
                </Button>
            )}

          </div>
      )}
    </div>
  );
};

export default ResultStep;

import React, { useState, useEffect } from "react";

// –ò–º–ø–æ—Ä—Ç —Ç–∏–ø–æ–≤
import { PaymentStepProps } from "../payment/types";

// –ò–º–ø–æ—Ä—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
import OrderDetails from "../payment/OrderDetails";
import OrderSummary from "../payment/OrderSummary";

// –ò–º–ø–æ—Ä—Ç —Ö—É–∫–æ–≤
import { useOrderPrice } from "../payment/hooks/useOrderPrice";
import { getLanguageName } from "../language-selector/languages-data";

/**
 * –ö–æ–º–ø–æ–Ω–µ–Ω—Ç —à–∞–≥–∞ –æ–ø–ª–∞—Ç—ã –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –∑–∞–∫–∞–∑–∞
 * –û—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –≤—ã–±–æ—Ä —Å–ø–æ—Å–æ–±–∞ –æ–ø–ª–∞—Ç—ã –∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞
 */
const PaymentStep: React.FC<PaymentStepProps> = ({
  videoFile,
  selectedLanguage,
  videoDuration,
  onPayment,
}) => {
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–æ—Ü–µ—Å—Å–∞ –æ–ø–ª–∞—Ç—ã
  const [isProcessing, setIsProcessing] = useState(false);
  
  // –ü–æ–ª—É—á–∞–µ–º ID –≤–∏–¥–µ–æ –∏ –∫–ª—é—á —Ñ–∞–π–ª–∞ –∏–∑ localStorage
  const videoId = localStorage.getItem('uploadedVideoId') 
    ? parseInt(localStorage.getItem('uploadedVideoId') || '0') 
    : null;
  const fileKey = localStorage.getItem('uploadedFileKey');
  
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≤–∏–¥–µ–æ
  const [videoInfo, setVideoInfo] = useState<{
    duration: number;
    outputLanguage: string;
    outputLanguageName: string;
  } | null>(null);
  
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö
  const [isLoading, setIsLoading] = useState(false);
  
  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≤–∏–¥–µ–æ –∏–∑ API
  const fetchVideoInfo = async () => {
    if (!videoId || !fileKey) {
      console.log('‚ö†Ô∏è –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≤–∏–¥–µ–æ', { videoId, fileKey });
      return;
    }
    
    try {
      console.log('üîÑ –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≤–∏–¥–µ–æ', { videoId, fileKey });
      setIsLoading(true);
      
      // –í—Å–µ–≥–¥–∞ –¥–µ–ª–∞–µ–º –∑–∞–ø—Ä–æ—Å –∫ video-info
      
      console.log('üîÑ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ API');
      
      // –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é video-info –ø–æ –æ–±—Ä–∞–∑—Ü—É –∏–∑ VideoUploadService
      const projectRef = 'tbgwudnxjwplqtkjihxc';
      const supabaseUrl = `https://${projectRef}.supabase.co/functions/v1/video-info`;
      console.log("üìä Edge function URL:", supabaseUrl);
      
      // –°–æ–∑–¥–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è JSON –∑–∞–ø—Ä–æ—Å–∞
      const headers: HeadersInit = {
        'Content-Type': 'application/json'
      };
      
      const response = await fetch(supabaseUrl, {
        method: "POST",
        headers,
        body: JSON.stringify({
          videoId,
          fileKey,
          outputLanguage: localStorage.getItem("selectedLanguage") || selectedLanguage || "en"
        })
      });
      
      // –ü–æ –æ–±—Ä–∞–∑—Ü—É –∏–∑ VideoUploadService
      console.log("üìä API response status:", response.status);
      const responseText = await response.text();
      
      let data;
      try {
        // –ü—Ä–æ–±—É–µ–º —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å –∫–∞–∫ JSON
        data = JSON.parse(responseText);
        console.log("üìä Parsed response data:", data);
      } catch (e) {
        console.error("üìä Failed to parse response as JSON:", e, "Response was:", responseText);
        throw new Error("–ü–æ–ª—É—á–µ–Ω –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞");
      }

      if (!response.ok) {
        console.error(`–û—à–∏–±–∫–∞ API: ${response.status}`);
        throw new Error(data.error || "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–∏–¥–µ–æ");
      }
      console.log('‚úÖ –ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –æ –≤–∏–¥–µ–æ –∏–∑ API:', data);
      
      // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
      const videoData = {
        duration: data.duration || videoDuration || 180,
        outputLanguage: data.outputLanguage || selectedLanguage || "en",
        outputLanguageName: getLanguageName(data.outputLanguage || selectedLanguage || "en")
      };
      
      console.log('‚úÖ –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ –≤–∏–¥–µ–æ:', videoData);
      setVideoInfo(videoData);
      
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ localStorage
      localStorage.setItem('videoDuration', videoData.duration.toString());
      localStorage.setItem('selectedLanguage', videoData.outputLanguage);
      
    } catch (err) {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≤–∏–¥–µ–æ:", err);
      
      // –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ props
      setVideoInfo({
        duration: videoDuration || 180,
        outputLanguage: selectedLanguage || "en",
        outputLanguageName: getLanguageName(selectedLanguage || "en")
      });
    } finally {
      setIsLoading(false);
    }
  };
  
  // –≠—Ñ—Ñ–µ–∫—Ç –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –æ –≤–∏–¥–µ–æ –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  useEffect(() => {
    console.log('üîÑ –ö–æ–º–ø–æ–Ω–µ–Ω—Ç PaymentStep —Å–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω');
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –≤–∏–¥–µ–æ –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
    fetchVideoInfo();
    
  // eslint-disable-next-line react-hooks/exhaustive-deps
  }, []); // –ü—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π - –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
  
  // –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∏–∑ API, –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–∞, –∏–Ω–∞—á–µ –∏–∑ –ø—Ä–æ–ø—Å–æ–≤
  const actualDuration = videoInfo?.duration || videoDuration;
  const actualLanguage = videoInfo?.outputLanguage || selectedLanguage;
  const actualLanguageName = videoInfo?.outputLanguageName;
  
  // –ü–æ–ª—É—á–∞–µ–º —Ü–µ–Ω—É –∑–∞–∫–∞–∑–∞ –∏–∑ —Ö—É–∫–∞
  const price = useOrderPrice(videoFile, actualDuration);

  /**
   * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–ª–∞—Ç–µ–∂–∞
   * –ò–º–∏—Ç–∏—Ä—É–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å –æ–ø–ª–∞—Ç—ã –∏ –≤—ã–∑—ã–≤–∞–µ—Ç –∫–æ–ª–±—ç–∫ onPayment –ø—Ä–∏ —É—Å–ø–µ—Ö–µ
   */
  const handleSubmitPayment = () => {
    setIsProcessing(true);

    // –ò–º–∏—Ç–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–ª–∞—Ç–µ–∂–∞
    setTimeout(() => {
      setIsProcessing(false);
      onPayment();
    }, 2000);
  };

  return (
    <div className="grid grid-cols-1 md:grid-cols-5 gap-6">
      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–∫–∞–∑–µ (3 –∫–æ–ª–æ–Ω–∫–∏) */}
      <div className="md:col-span-3">
        <OrderDetails
          videoFile={videoFile}
          selectedLanguage={actualLanguage}
          videoDuration={actualDuration}
          languageName={actualLanguageName}
          isLoading={isLoading}
        />
      </div>

      {/* –ò—Ç–æ–≥–æ (2 –∫–æ–ª–æ–Ω–∫–∏) */}
      <div className="md:col-span-2">
        <OrderSummary
          price={price}
          isProcessing={isProcessing}
          onPayment={handleSubmitPayment}
          videoDuration={actualDuration}
        />
      </div>
    </div>
  );
};

export default PaymentStep;

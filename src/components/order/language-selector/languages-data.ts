
import { Language } from './types';

/**
 * –î–∞–Ω–Ω—ã–µ –æ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —è–∑—ã–∫–∞—Ö –ø–µ—Ä–µ–≤–æ–¥–∞
 */
export const AVAILABLE_LANGUAGES: Language[] = [
  { code: "en", name: "–ê–Ω–≥–ª–∏–π—Å–∫–∏–π", flag: "üá¨üáß", popular: true },
  { code: "es", name: "–ò—Å–ø–∞–Ω—Å–∫–∏–π", flag: "üá™üá∏", popular: true },
  { code: "fr", name: "–§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π", flag: "üá´üá∑", popular: true },
  { code: "de", name: "–ù–µ–º–µ—Ü–∫–∏–π", flag: "üá©üá™", popular: true },
  { code: "it", name: "–ò—Ç–∞–ª—å—è–Ω—Å–∫–∏–π", flag: "üáÆüáπ", popular: true },
  { code: "pt", name: "–ü–æ—Ä—Ç—É–≥–∞–ª—å—Å–∫–∏–π", flag: "üáµüáπ", popular: true },
  { code: "ru", name: "–†—É—Å—Å–∫–∏–π", flag: "üá∑üá∫", popular: true },
  { code: "zh", name: "–ö–∏—Ç–∞–π—Å–∫–∏–π", flag: "üá®üá≥", popular: true },
  { code: "ja", name: "–Ø–ø–æ–Ω—Å–∫–∏–π", flag: "üáØüáµ", popular: true },
  { code: "ko", name: "–ö–æ—Ä–µ–π—Å–∫–∏–π", flag: "üá∞üá∑", popular: true },
  { code: "ar", name: "–ê—Ä–∞–±—Å–∫–∏–π", flag: "üá∏üá¶", popular: false },
  { code: "hi", name: "–•–∏–Ω–¥–∏", flag: "üáÆüá≥", popular: false },
  { code: "bn", name: "–ë–µ–Ω–≥–∞–ª—å—Å–∫–∏–π", flag: "üáßüá©", popular: false },
  { code: "id", name: "–ò–Ω–¥–æ–Ω–µ–∑–∏–π—Å–∫–∏–π", flag: "üáÆüá©", popular: false },
  { code: "tr", name: "–¢—É—Ä–µ—Ü–∫–∏–π", flag: "üáπüá∑", popular: false },
  { code: "nl", name: "–ì–æ–ª–ª–∞–Ω–¥—Å–∫–∏–π", flag: "üá≥üá±", popular: false },
  { code: "pl", name: "–ü–æ–ª—å—Å–∫–∏–π", flag: "üáµüá±", popular: false },
  { code: "sv", name: "–®–≤–µ–¥—Å–∫–∏–π", flag: "üá∏üá™", popular: false },
  { code: "da", name: "–î–∞—Ç—Å–∫–∏–π", flag: "üá©üá∞", popular: false },
];

/**
 * –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ —è–∑—ã–∫–µ –ø–æ –µ–≥–æ –∫–æ–¥—É
 * @param code –ö–æ–¥ —è–∑—ã–∫–∞
 * @returns –î–∞–Ω–Ω—ã–µ –æ —è–∑—ã–∫–µ –∏–ª–∏ undefined –µ—Å–ª–∏ —è–∑—ã–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω
 */
export const getLanguageByCode = (code: string): Language | undefined => {
  // –°–Ω–∞—á–∞–ª–∞ –∏—â–µ–º –ø—Ä—è–º–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ
  const exactMatch = AVAILABLE_LANGUAGES.find(lang => lang.code === code);
  if (exactMatch) return exactMatch;
  
  // –ï—Å–ª–∏ –∫–æ–¥ –∏–º–µ–µ—Ç —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç (–Ω–∞–ø—Ä–∏–º–µ—Ä, en-US, en-AA), 
  // –ø—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –æ—Å–Ω–æ–≤–Ω—É—é —á–∞—Å—Ç—å –∫–æ–¥–∞ –¥–æ –¥–µ—Ñ–∏—Å–∞
  const baseLangCode = code.split('-')[0];
  return AVAILABLE_LANGUAGES.find(lang => lang.code === baseLangCode);
};

/**
 * –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–º–µ–Ω–∏ —è–∑—ã–∫–∞ –ø–æ –µ–≥–æ –∫–æ–¥—É
 * @param code –ö–æ–¥ —è–∑—ã–∫–∞
 * @returns –ò–º—è —è–∑—ã–∫–∞ –∏–ª–∏ "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —è–∑—ã–∫" –µ—Å–ª–∏ —è–∑—ã–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω
 */
export const getLanguageName = (code: string): string => {
  return getLanguageByCode(code)?.name || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —è–∑—ã–∫";
};

import React, { useState, useEffect } from "react";

// –ò–º–ø–æ—Ä—Ç —Ç–∏–ø–æ–≤
import { PaymentStepProps } from "../payment/types";

// –ò–º–ø–æ—Ä—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
import OrderDetails from "../payment/OrderDetails";
import OrderSummary from "../payment/OrderSummary";

// –ò–º–ø–æ—Ä—Ç —Ö—É–∫–æ–≤
import { useOrderPrice } from "../payment/hooks/useOrderPrice";
// –ë–æ–ª—å—à–µ –Ω–µ –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç, —Ç.–∫. –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ–≥–æ –≤ OrderDetails

/**
 * –ö–æ–º–ø–æ–Ω–µ–Ω—Ç —à–∞–≥–∞ –æ–ø–ª–∞—Ç—ã –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –∑–∞–∫–∞–∑–∞
 * –û—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –≤—ã–±–æ—Ä —Å–ø–æ—Å–æ–±–∞ –æ–ø–ª–∞—Ç—ã –∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞
 */
const PaymentStep: React.FC<PaymentStepProps> = ({
  videoFile,
  selectedLanguage,
  videoDuration,
  onPayment,
}) => {
  // –ë–æ–ª—å—à–µ –Ω–µ –Ω—É–∂–¥–∞–µ–º—Å—è –≤ —è–≤–Ω–æ–º –¥–æ—Å—Ç—É–ø–µ –∫ –∫–æ–Ω—Ç–µ–∫—Å—Ç—É –∑–¥–µ—Å—å, 
  // —Ç.–∫. OrderDetails —Å–∞–º –ø–æ–ª—É—á–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
  
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–æ—Ü–µ—Å—Å–∞ –æ–ø–ª–∞—Ç—ã
  const [isProcessing, setIsProcessing] = useState(false);
  
  // –ü–æ–ª—É—á–∞–µ–º ID –≤–∏–¥–µ–æ –∏ –∫–ª—é—á —Ñ–∞–π–ª–∞ –∏–∑ localStorage
  // –ò—Å–ø–æ–ª—å–∑—É–µ–º videoDbId, –∫–æ—Ç–æ—Ä—ã–π —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è –Ω–∞ —à–∞–≥–µ –≤—ã–±–æ—Ä–∞ —è–∑—ã–∫–∞,
  // –≤–º–µ—Å—Ç–æ uploadedVideoId, —Ç.–∫. –æ–Ω —è–≤–ª—è–µ—Ç—Å—è –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º ID –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
  const videoId = localStorage.getItem('videoDbId') 
    ? parseInt(localStorage.getItem('videoDbId') || '0') 
    : null;
  const fileKey = localStorage.getItem('uploadedFileKey');
  
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≤–∏–¥–µ–æ
  const [videoInfo, setVideoInfo] = useState<{
    duration: number;
    outputLanguage: string;
    outputLanguageName: string;
  } | null>(null);
  
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö
  const [isLoading, setIsLoading] = useState(false);
  
  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≤–∏–¥–µ–æ –∏–∑ API
  const fetchVideoInfo = async () => {
    if (!videoId || !fileKey) {
      console.log('‚ö†Ô∏è –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≤–∏–¥–µ–æ', { videoId, fileKey });
      // –ï—Å–ª–∏ –Ω–µ—Ç ID –≤–∏–¥–µ–æ, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫—É –∏ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —à–∞–≥ –∑–∞–≥—Ä—É–∑–∫–∏
      toast({
        title: "–û—à–∏–±–∫–∞",
        description: "–ù–µ –Ω–∞–π–¥–µ–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–º –≤–∏–¥–µ–æ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–≥—Ä—É–∑–∏—Ç–µ –≤–∏–¥–µ–æ –∑–∞–Ω–æ–≤–æ.",
        variant: "destructive",
      });
      
      // –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º
      setTimeout(() => {
        window.location.href = '/order?step=0';
      }, 2000);
      return;
    }
    
    try {
      console.log('üîÑ –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≤–∏–¥–µ–æ', { videoId, fileKey });
      setIsLoading(true);
      
      // –í—Å–µ–≥–¥–∞ –¥–µ–ª–∞–µ–º –∑–∞–ø—Ä–æ—Å –∫ video-info
      
      console.log('üîÑ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ API');
      
      // –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é video-info –ø–æ –æ–±—Ä–∞–∑—Ü—É –∏–∑ VideoUploadService
      const projectRef = 'tbgwudnxjwplqtkjihxc';
      const supabaseUrl = `https://${projectRef}.supabase.co/functions/v1/video-info`;
      console.log("üìä Edge function URL:", supabaseUrl);
      
      // –°–æ–∑–¥–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è JSON –∑–∞–ø—Ä–æ—Å–∞
      const headers: HeadersInit = {
        'Content-Type': 'application/json'
      };
      
      const response = await fetch(supabaseUrl, {
        method: "POST",
        headers,
        body: JSON.stringify({
          videoId,
          fileKey,
          outputLanguage: localStorage.getItem("selectedLanguage") || selectedLanguage || "en"
        })
      });
      
      // –ü–æ –æ–±—Ä–∞–∑—Ü—É –∏–∑ VideoUploadService
      console.log("üìä API response status:", response.status);
      const responseText = await response.text();
      
      let data;
      try {
        // –ü—Ä–æ–±—É–µ–º —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å –∫–∞–∫ JSON
        data = JSON.parse(responseText);
        console.log("üìä Parsed response data:", data);
      } catch (e) {
        console.error("üìä Failed to parse response as JSON:", e, "Response was:", responseText);
        throw new Error("–ü–æ–ª—É—á–µ–Ω –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞");
      }

      if (!response.ok) {
        const errorMessage = data.error || `–û—à–∏–±–∫–∞ API: ${response.status}`;
        console.error(errorMessage, data);
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—à–∏–±–∫–µ
        toast({
          title: "–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≤–∏–¥–µ–æ",
          description: data.message || errorMessage,
          variant: "destructive",
        });
        
        // –û—á–∏—â–∞–µ–º –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ localStorage
        if (response.status === 404) {
          localStorage.removeItem('videoDbId');
          localStorage.removeItem('uploadedVideoId');
          localStorage.removeItem('uploadedFileKey');
          localStorage.removeItem('videoDuration');
          
          // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —à–∞–≥ –∑–∞–≥—Ä—É–∑–∫–∏, —Ç–∞–∫ –∫–∞–∫ –≤–∏–¥–µ–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ
          window.location.href = '/order?step=0';
          throw new Error("–í–∏–¥–µ–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ. –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ —à–∞–≥ –∑–∞–≥—Ä—É–∑–∫–∏...");
        }
        
        throw new Error(errorMessage);
      }
      
      if (!data.success) {
        console.error('–û—à–∏–±–∫–∞ –¥–∞–Ω–Ω—ã—Ö API:', data);
        throw new Error(data.error || "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ—Ç API");
      }
      
      console.log('‚úÖ –ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –æ –≤–∏–¥–µ–æ –∏–∑ API:', data);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤ –¥–∞–Ω–Ω—ã—Ö —Ç–æ—á–Ω–æ –µ—Å—Ç—å –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–æ–ª—è
      if (!data.duration) {
        throw new Error("–í –æ—Ç–≤–µ—Ç–µ API –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤–∏–¥–µ–æ");
      }
      
      // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
      const languageCode = data.outputLanguage || selectedLanguage || "en";
      const videoData = {
        duration: data.duration,
        outputLanguage: languageCode
      };
      
      console.log(`‚úÖ –ü–æ–ª—É—á–µ–Ω —è–∑—ã–∫ –ø–µ—Ä–µ–≤–æ–¥–∞: ${languageCode}`);
      console.log('‚úÖ –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ –≤–∏–¥–µ–æ:', videoData);
      setVideoInfo(videoData);
      
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ localStorage
      localStorage.setItem('videoDuration', videoData.duration.toString());
      localStorage.setItem('selectedLanguage', videoData.outputLanguage);
      
    } catch (err) {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≤–∏–¥–µ–æ:", err);
      
      // –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ props
      setVideoInfo({
        duration: videoDuration || 180,
        outputLanguage: selectedLanguage || "en",
        outputLanguageName: getLanguageName(selectedLanguage || "en")
      });
    } finally {
      setIsLoading(false);
    }
  };
  
  // –≠—Ñ—Ñ–µ–∫—Ç –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –æ –≤–∏–¥–µ–æ –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  useEffect(() => {
    console.log('üîÑ –ö–æ–º–ø–æ–Ω–µ–Ω—Ç PaymentStep —Å–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω');
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –≤–∏–¥–µ–æ –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
    fetchVideoInfo();
    
  // eslint-disable-next-line react-hooks/exhaustive-deps
  }, []); // –ü—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π - –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
  
  // –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∏–∑ API, –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–∞, –∏–Ω–∞—á–µ –∏–∑ –ø—Ä–æ–ø—Å–æ–≤
  const actualDuration = videoInfo?.duration || videoDuration;
  const actualLanguage = videoInfo?.outputLanguage || selectedLanguage;
  
  // –ë–æ–ª—å—à–µ –Ω–µ –Ω—É–∂–Ω–æ –ø–æ–ª—É—á–∞—Ç—å –∏–º—è —è–∑—ã–∫–∞ –∑–¥–µ—Å—å, —Ç.–∫. —ç—Ç–æ –¥–µ–ª–∞–µ—Ç—Å—è –≤ OrderDetails
  // —Å –ø–æ–º–æ—â—å—é –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
  
  // –ü–æ–ª—É—á–∞–µ–º —Ü–µ–Ω—É –∑–∞–∫–∞–∑–∞ –∏–∑ —Ö—É–∫–∞
  const price = useOrderPrice(videoFile, actualDuration);

  /**
   * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–ª–∞—Ç–µ–∂–∞
   * –ò–º–∏—Ç–∏—Ä—É–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å –æ–ø–ª–∞—Ç—ã –∏ –≤—ã–∑—ã–≤–∞–µ—Ç –∫–æ–ª–±—ç–∫ onPayment –ø—Ä–∏ —É—Å–ø–µ—Ö–µ
   */
  const handleSubmitPayment = () => {
    setIsProcessing(true);

    // –ò–º–∏—Ç–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–ª–∞—Ç–µ–∂–∞
    setTimeout(() => {
      setIsProcessing(false);
      onPayment();
    }, 2000);
  };

  return (
    <div className="flex flex-col max-w-2xl mx-auto">
      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–∫–∞–∑–µ (–ø–æ —Ü–µ–Ω—Ç—Ä—É) */}
      <OrderDetails
        videoFile={videoFile}
        selectedLanguage={actualLanguage}
        videoDuration={actualDuration}
        isLoading={isLoading}
        price={price}
        isProcessing={isProcessing}
        onPayment={handleSubmitPayment}
      />
    </div>
  );
};

export default PaymentStep;

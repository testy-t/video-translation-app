import React, { useState, useRef, useEffect } from "react";
import { useNavigate } from "react-router-dom";
import { Button } from "@/components/ui/button";
import Icon from "@/components/ui/icon";
import AnimatedBackground from "./AnimatedBackground";
import LanguageSelector from "./LanguageSelector";
import InlineLanguageToggle from "./InlineLanguageToggle";

const Hero: React.FC = () => {
  const navigate = useNavigate();
  const [activeLanguage, setActiveLanguage] = useState("ru");
  const [isMuted, setIsMuted] = useState(true);
  const [isMobile, setIsMobile] = useState(false);
  const mobileVideoRef = useRef<HTMLVideoElement>(null);
  const desktopVideoRef = useRef<HTMLVideoElement>(null);

  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –º–æ–±–∏–ª—å–Ω—ã–π –≤–∏–¥ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ä–∞–∑–º–µ—Ä–∞ –æ–∫–Ω–∞
  useEffect(() => {
    const checkIsMobile = () => {
      setIsMobile(window.innerWidth < 768); // 768px - —ç—Ç–æ breakpoint –¥–ª—è md –≤ Tailwind
    };

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
    checkIsMobile();

    // –°–ª—É—à–∞–µ–º —Å–æ–±—ã—Ç–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞ –æ–∫–Ω–∞
    window.addEventListener("resize", checkIsMobile);

    // –û—á–∏—â–∞–µ–º —Å–ª—É—à–∞—Ç–µ–ª—å –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
    return () => window.removeEventListener("resize", checkIsMobile);
  }, []);

  // –ü—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —è–∑—ã–∫–∞ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º –≤–∏–¥–µ–æ
  useEffect(() => {
    // –°–Ω–∞—á–∞–ª–∞ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–µ –≤–∏–¥–µ–æ
    if (mobileVideoRef.current) {
      mobileVideoRef.current.pause();
    }
    if (desktopVideoRef.current) {
      desktopVideoRef.current.pause();
    }

    // –ü–æ—Å–ª–µ –∫–æ—Ä–æ—Ç–∫–æ–π –∑–∞–¥–µ—Ä–∂–∫–∏ –∑–∞–ø—É—Å–∫–∞–µ–º –Ω—É–∂–Ω–æ–µ –≤–∏–¥–µ–æ
    setTimeout(() => {
      if (isMobile && mobileVideoRef.current) {
        mobileVideoRef.current
          .play()
          .catch((e) => console.error("Error playing mobile video:", e));
      } else if (!isMobile && desktopVideoRef.current) {
        desktopVideoRef.current
          .play()
          .catch((e) => console.error("Error playing desktop video:", e));
      }
    }, 50);
  }, [activeLanguage, isMobile]);

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
  const goToOrderPage = () => {
    navigate("/order");
  };

  // –î–∞–Ω–Ω—ã–µ —è–∑—ã–∫–æ–≤
  const languages = [
    {
      code: "ru",
      flag: "üá∑üá∫",
      name: "–†—É—Å—Å–∫–∏–π",
      isActive: activeLanguage === "ru",
    },
    { code: "zh", flag: "üá®üá≥", name: "‰∏≠Êñá", isActive: activeLanguage === "zh" },
    {
      code: "de",
      flag: "üá©üá™",
      name: "Deutsch",
      isActive: activeLanguage === "de",
    },
    {
      code: "en",
      flag: "üá¨üáß",
      name: "English",
      isActive: activeLanguage === "en",
    },
    {
      code: "es",
      flag: "üá™üá∏",
      name: "Espa√±ol",
      isActive: activeLanguage === "es",
    },
  ];

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ —è–∑—ã–∫–∞
  const handleLanguageSelect = (code: string) => {
    // –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω —Ç–æ—Ç –∂–µ —è–∑—ã–∫, –Ω–µ –¥–µ–ª–∞–µ–º –Ω–∏—á–µ–≥–æ
    if (activeLanguage === code) return;

    setActiveLanguage(code);
    console.log(`Selected language: ${code}`);
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –∑–≤—É–∫–∞ —Ç–æ–ª—å–∫–æ –Ω–∞ –∞–∫—Ç–∏–≤–Ω–æ–º –≤–∏–¥–µ–æ
  const toggleMute = () => {
    const newMutedState = !isMuted;
    setIsMuted(newMutedState);

    // –í–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏–º –≤–∏–¥–µ–æ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –æ–Ω–æ –Ω–∞ –ø–∞—É–∑–µ –∏ –Ω—É–∂–Ω–æ –≤–∫–ª—é—á–∏—Ç—å –∑–≤—É–∫
    if (!newMutedState) {
      // –í–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏–º —Ç–æ–ª—å–∫–æ —Ç–æ –≤–∏–¥–µ–æ, –∫–æ—Ç–æ—Ä–æ–µ –≤–∏–¥–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
      if (isMobile) {
        if (mobileVideoRef.current && mobileVideoRef.current.paused) {
          mobileVideoRef.current
            .play()
            .catch((e) => console.error("Error playing mobile video:", e));
        }
      } else {
        if (desktopVideoRef.current && desktopVideoRef.current.paused) {
          desktopVideoRef.current
            .play()
            .catch((e) => console.error("Error playing desktop video:", e));
        }
      }
    }
  };

  return (
    <section className="relative overflow-hidden">
      {/* –¢—ë–º–Ω–∞—è —Å–µ–∫—Ü–∏—è —Å –º–∏–Ω–∏–º–∞–ª–∏—Å—Ç–∏—á–Ω—ã–º —Ñ–æ–Ω–æ–º */}
      <div className="min-h-screen flex items-center pt-14 md:pt-16 pb-24 md:pb-32 relative">
        {!isMobile && <AnimatedBackground />}

        <div className="container mx-auto px-4 md:px-0 w-full max-w-[66rem] relative z-10">
          <div className="flex flex-col md:grid md:grid-cols-2 gap-6 md:gap-8 items-center">
            {/* –õ–µ–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞ - —Ç–µ–∫—Å—Ç */}
            <div className="text-center md:text-left w-full mt-8 md:mt-0">
              <span className="hidden md:inline-flex items-center gap-1.5 px-3 py-1.5 rounded-full text-xs font-medium mb-4 md:mb-6 bg-[#0070F3]/10 text-[#0070F3] backdrop-blur-sm border border-[#0070F3]/20">
                <Icon
                  name="Sparkles"
                  size={14}
                  className="text-[#0070F3] me-1"
                />
                –ò–ò –ü–µ—Ä–µ–≤–æ–¥—á–∏–∫ –í–∏–¥–µ–æ
              </span>
              <h1 className="text-2xl md:text-4xl lg:text-7xl font-bold tracking-tight mt-4 md:mt-0 mb-4 text-slate-900">
                –í–∞—à –≥–æ–ª–æ—Å –Ω–∞ –ª—é–±–æ–º —è–∑—ã–∫–µ
              </h1>

              {/* –í–∏–¥–µ–æ –¥–ª—è –º–æ–±–∏–ª—å–Ω–æ–π –≤–µ—Ä—Å–∏–∏ —Ä–∞–∑–º–µ—â–∞–µ–º —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞ */}
              <div className="w-full mb-3 flex justify-center md:hidden">
                <div
                  className="w-full max-w-md aspect-square rounded-2xl overflow-hidden border border-slate-200 relative shadow-lg cursor-pointer"
                  onClick={toggleMute}
                >
                  {isMobile && (
                    <video
                      ref={mobileVideoRef}
                      className="w-full h-full object-cover"
                      src={`https://cdn.poehali.dev/golosok/preview/${activeLanguage === "zh" ? "cn" : activeLanguage}.mp4`}
                      autoPlay
                      loop
                      muted={isMuted}
                      playsInline
                      key={`mobile-${activeLanguage}`}
                    />
                  )}
                  <div className="absolute bottom-4 right-4 bg-black/60 rounded-full p-3 shadow-lg cursor-pointer">
                    <Icon
                      name={isMuted ? "VolumeX" : "Volume2"}
                      size={26}
                      className="text-white"
                    />
                  </div>
                </div>
              </div>

              {/* –ò–Ω–ª–∞–π–Ω –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å —è–∑—ã–∫–æ–≤ —Å—Ä–∞–∑—É –ø–æ–¥ –≤–∏–¥–µ–æ */}
              <div className="mb-5 flex justify-center md:hidden">
                <InlineLanguageToggle
                  languages={languages}
                  activeLanguage={activeLanguage}
                  onSelectLanguage={handleLanguageSelect}
                />
              </div>

              {/* –ö–Ω–æ–ø–∫–∞ –¥–µ–π—Å—Ç–≤–∏—è –ø–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞ —è–∑—ã–∫–∞ - —Ç–æ–ª—å–∫–æ –¥–ª—è –º–æ–±–∏–ª—å–Ω–æ–π –≤–µ—Ä—Å–∏–∏ */}
              <div className="flex justify-center md:hidden mb-4">
                <Button
                  className="bg-[#0070F3] hover:bg-[#0060d3] text-white px-6 md:px-8 py-3 md:py-4 text-base font-medium rounded-full h-auto"
                  onClick={goToOrderPage}
                >
                  <Icon name="Play" size={18} className="mr-2" />
                  –ü–µ—Ä–µ–≤–µ—Å—Ç–∏ –≤–∏–¥–µ–æ
                </Button>
              </div>

              <p className="text-base md:text-lg text-slate-700 mb-5 max-w-xl mx-auto md:mx-0 leading-relaxed">
                –ó–∞–≥—Ä—É–∑–∏—Ç–µ –≤–∏–¥–µ–æ –∏ –ø–æ–ª—É—á–∏—Ç–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –ø–µ—Ä–µ–≤–æ–¥ –Ω–∞ –ª—é–±–æ–π
                —è–∑—ã–∫ —Å –∏–¥–µ–∞–ª—å–Ω–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–µ–π –≥—É–± –∑–∞ —Å—á–∏—Ç–∞–Ω–Ω—ã–µ –º–∏–Ω—É—Ç—ã.
              </p>

              {/* –ö–Ω–æ–ø–∫–∞ –¥–µ–π—Å—Ç–≤–∏—è –¥–ª—è –¥–µ—Å–∫—Ç–æ–ø–∞ - –ø–æ—Å–ª–µ –æ–ø–∏—Å–∞–Ω–∏—è */}
              <div className="hidden md:flex justify-start mb-4">
                <Button
                  className="bg-[#0070F3] hover:bg-[#0060d3] text-white px-6 md:px-8 py-3 md:py-4 text-base font-medium rounded-full h-auto"
                  onClick={goToOrderPage}
                >
                  <Icon name="Play" size={18} className="mr-2" />
                  –ü–µ—Ä–µ–≤–µ—Å—Ç–∏ –≤–∏–¥–µ–æ
                </Button>
              </div>
            </div>

            {/* –ü—Ä–∞–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞ - –≤–∏–¥–µ–æ - —Ç–æ–ª—å–∫–æ –¥–ª—è –¥–µ—Å–∫—Ç–æ–ø–∞ */}
            <div className="w-full hidden md:flex flex-col items-center md:items-end mt-0">
              <div
                className="w-full md:w-[85%] aspect-video md:aspect-square rounded-2xl overflow-hidden border border-slate-200 relative shadow-lg cursor-pointer"
                onClick={toggleMute}
              >
                {!isMobile && (
                  <video
                    ref={desktopVideoRef}
                    className="w-full h-full object-cover"
                    src={`https://cdn.poehali.dev/golosok/preview/${activeLanguage === "zh" ? "cn" : activeLanguage}.mp4`}
                    autoPlay
                    loop
                    muted={isMuted}
                    playsInline
                    key={`desktop-${activeLanguage}`}
                  />
                )}
                <div className="absolute bottom-4 right-4 bg-black/60 rounded-full p-3 shadow-lg cursor-pointer">
                  <Icon
                    name={isMuted ? "VolumeX" : "Volume2"}
                    size={26}
                    className="text-white"
                  />
                </div>
              </div>

              {/* –Ø–∑—ã–∫–∏ - –º–æ–±–∏–ª—å–Ω—ã–π —Å—Ç–∏–ª—å —Å —É–≤–µ–ª–∏—á–µ–Ω–Ω—ã–º —Ä–∞–∑–º–µ—Ä–æ–º –¥–ª—è –¥–µ—Å–∫—Ç–æ–ø–∞ */}
              <div className="mt-4 md:mt-5 w-full md:w-[85%] hidden md:flex justify-center">
                <InlineLanguageToggle
                  languages={languages}
                  activeLanguage={activeLanguage}
                  onSelectLanguage={handleLanguageSelect}
                  isDesktop={true}
                />
              </div>
            </div>
          </div>
        </div>
      </div>
    </section>
  );
};

export default Hero;

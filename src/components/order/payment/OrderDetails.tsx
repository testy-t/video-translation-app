import React, { useState, useEffect } from "react";
import { Card, CardContent } from "@/components/ui/card";
import Icon from "@/components/ui/icon";
import { useLanguageContext } from "@/context/LanguageContext";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";

interface InfoBlockProps {
  icon: string;
  value: React.ReactNode;
  label: string;
  className?: string;
}

// –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–π –±–ª–æ–∫ –¥–ª—è –∏–Ω—Ñ–æ–≥—Ä–∞—Ñ–∏–∫–∏
const InfoBlock: React.FC<InfoBlockProps> = ({
  icon,
  value,
  label,
  className,
}) => (
  <div
    className={`flex flex-col items-center justify-center p-4 rounded-lg bg-muted/30 ${className}`}
  >
    {icon && <Icon name={icon} className="mb-2 mt-1 text-primary" size={24} />}
    <div className="text-xl font-bold">{value}</div>
    <div className="text-sm text-muted-foreground">{label}</div>
  </div>
);

interface OrderDetailsProps {
  videoFile: File | null;
  selectedLanguage: string;
  videoDuration: number;
  isLoading?: boolean;
  price: number;
  isProcessing: boolean;
  processingStatus?: string;
  onPayment: (email: string) => void;
}

/**
 * –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π –∑–∞–∫–∞–∑–∞
 * @param videoFile - –ó–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –≤–∏–¥–µ–æ
 * @param selectedLanguage - –ö–æ–¥ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —è–∑—ã–∫–∞ –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞
 * @param videoDuration - –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤–∏–¥–µ–æ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
 */
const OrderDetails: React.FC<OrderDetailsProps> = ({
  videoFile,
  selectedLanguage,
  videoDuration,
  isLoading = false,
  price,
  isProcessing,
  processingStatus = "",
  onPayment,
}) => {
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è email
  const [email, setEmail] = useState<string>(
    () => localStorage.getItem("userEmail") || "",
  );
  const [emailError, setEmailError] = useState<string>("");
  const [isMobile, setIsMobile] = useState<boolean>(false);

  // –ü–æ–ª—É—á–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–º–µ–Ω–∏ —è–∑—ã–∫–∞ –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
  const {
    getLanguageName,
    languages,
    isLoading: isLoadingLanguages,
  } = useLanguageContext();

  // –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –º–æ–±–∏–ª—å–Ω—ã–º –Ω–∞ –æ—Å–Ω–æ–≤–µ —à–∏—Ä–∏–Ω—ã —ç–∫—Ä–∞–Ω–∞
  useEffect(() => {
    const checkIsMobile = () => {
      setIsMobile(window.innerWidth < 640);
    };

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
    checkIsMobile();

    // –î–æ–±–∞–≤–ª—è–µ–º —Å–ª—É—à–∞—Ç–µ–ª—å –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞ –æ–∫–Ω–∞
    window.addEventListener("resize", checkIsMobile);

    // –û—á–∏—â–∞–µ–º —Å–ª—É—à–∞—Ç–µ–ª—å –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
    return () => {
      window.removeEventListener("resize", checkIsMobile);
    };
  }, []);

  // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤–∏–¥–µ–æ –≤ —Ñ–æ—Ä–º–∞—Ç –º–º:—Å—Å
  const formatDuration = (seconds: number): string => {
    const minutes = Math.floor(seconds / 60);
    const secs = seconds % 60;
    return `${minutes}:${secs.toString().padStart(2, "0")}`;
  };

  // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º —è–∑—ã–∫–µ (–≤–∫–ª—é—á–∞—è —Ñ–ª–∞–≥)
  const getLanguageInfo = () => {
    if (!selectedLanguage || isLoading || isLoadingLanguages) {
      return { name: "–ó–∞–≥—Ä—É–∑–∫–∞...", flag: "üåê" };
    }

    const name = getLanguageName(selectedLanguage);
    const langObj = languages.find(
      (l) =>
        l.code.toLowerCase() === selectedLanguage.toLowerCase() ||
        l.code.split("-")[0].toLowerCase() ===
          selectedLanguage.split("-")[0].toLowerCase(),
    );

    return {
      name,
      flag: langObj?.flag || "üåê",
    };
  };

  const languageInfo = getLanguageInfo();
  const roundedMinutes = Math.ceil(videoDuration / 60);
  const pricePerMinute = 149;
  const totalPrice = roundedMinutes * pricePerMinute;

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è email
  const handleEmailChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    const newEmail = e.target.value;
    setEmail(newEmail);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º–∞—Ç –ø—Ä–∏ –≤–≤–æ–¥–µ
    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    if (!emailRegex.test(newEmail) && newEmail) {
      setEmailError("–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email");
    } else {
      setEmailError("");
    }
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –ø–æ –∫–Ω–æ–ø–∫–µ –æ–ø–ª–∞—Ç—ã
  const handlePayButtonClick = () => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å email –ø–µ—Ä–µ–¥ –æ–ø–ª–∞—Ç–æ–π
    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    if (!email) {
      setEmailError("–í–≤–µ–¥–∏—Ç–µ email –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞");
      return;
    }
    if (!emailRegex.test(email)) {
      setEmailError("–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email");
      return;
    }

    // –ï—Å–ª–∏ email –≤–∞–ª–∏–¥–Ω—ã–π, —Å–æ—Ö—Ä–∞–Ω—è–µ–º –µ–≥–æ –≤ localStorage
    localStorage.setItem("userEmail", email);

    // –ò –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –æ–ø–ª–∞—Ç—É
    onPayment(email);
  };

  // –¢–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å—Ç–∞—Ç—É—Å–∞
  const getButtonText = () => {
    if (isProcessing) {
      if (processingStatus) {
        return (
          <>
            <Icon name="Loader2" className="mr-2 animate-spin" />
            {processingStatus}
          </>
        );
      }
      return (
        <>
          <Icon name="Loader2" className="mr-2 animate-spin" />
          –û–±—Ä–∞–±–æ—Ç–∫–∞...
        </>
      );
    }
    return <>–û–ø–ª–∞—Ç–∏—Ç—å {totalPrice} ‚ÇΩ</>;
  };

  // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π email –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  useEffect(() => {
    const savedEmail = localStorage.getItem("userEmail");
    if (savedEmail) {
      setEmail(savedEmail);
    }
  }, []);

  return (
    <Card className="mb-6 border-0 shadow-none">
      <CardContent className="p-6 px-0">
        <h4 className="text-2xl font-bold mb-6 text-center">–î–µ—Ç–∞–ª–∏ –∑–∞–∫–∞–∑–∞</h4>

        {/* –í—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ */}
        <div className="flex items-center justify-center my-6 p-3 rounded-lg bg-primary/10">
          <Icon name="Rocket" className="mr-2 text-primary" />
          <span className="font-medium text-foreground/80">
            –í—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏: –¥–æ 15 –º–∏–Ω—É—Ç
          </span>
        </div>

        {/* –ò–Ω—Ñ–æ–≥—Ä–∞—Ñ–∏–∫–∞ - –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–∞—è, –¥–ª—è –¥–µ—Å–∫—Ç–æ–ø–∞ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–∞—è */}
        {isMobile ? (
          /* –ú–æ–±–∏–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è - —Å—Ç–µ–∫ –±–ª–æ–∫–æ–≤ –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–æ */
          <div className="flex flex-col gap-3 mb-6">
            {/* –ë–ª–æ–∫ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ */}
            <div className="flex items-center p-4 rounded-lg bg-muted/30">
              <Icon name="Clock" className="text-primary mr-3" size={20} />
              <div>
                <div className="text-lg font-bold text-foreground/80">
                  {formatDuration(videoDuration)}
                </div>
                <div className="text-xs text-muted-foreground/90">
                  –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å
                </div>
              </div>
            </div>

            {/* –ë–ª–æ–∫ —è–∑—ã–∫–∞ –ø–µ—Ä–µ–≤–æ–¥–∞ */}
            <div className="flex items-center p-4 rounded-lg bg-muted/30">
              {isLoading || isLoadingLanguages ? (
                <>
                  <Icon
                    name="Translate"
                    className="text-primary mr-3"
                    size={20}
                  />
                  <div>
                    <div className="text-lg font-bold flex items-center text-foreground/80">
                      <Icon
                        name="Loader2"
                        className="mr-2 w-4 h-4 animate-spin text-primary"
                      />
                      <span>–ó–∞–≥—Ä—É–∑–∫–∞...</span>
                    </div>
                    <div className="text-xs text-muted-foreground/90">
                      –Ø–∑—ã–∫ –ø–µ—Ä–µ–≤–æ–¥–∞
                    </div>
                  </div>
                </>
              ) : (
                <>
                  <div className="text-2xl mr-3">{languageInfo.flag}</div>
                  <div>
                    <div className="text-lg font-bold text-foreground/80">
                      {languageInfo.name}
                    </div>
                    <div className="text-xs text-muted-foreground/90">
                      –Ø–∑—ã–∫ –ø–µ—Ä–µ–≤–æ–¥–∞
                    </div>
                  </div>
                </>
              )}
            </div>

            {/* –ë–ª–æ–∫ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ */}
            <div className="flex items-center p-4 rounded-lg bg-muted/30">
              <Icon name="Wallet" className="text-primary mr-3" size={20} />
              <div>
                <div className="text-lg font-bold text-foreground/80">{`${totalPrice} ‚ÇΩ`}</div>
                <div className="text-xs text-muted-foreground/90">{`${roundedMinutes} –º–∏–Ω √ó ${pricePerMinute} ‚ÇΩ`}</div>
              </div>
            </div>
          </div>
        ) : (
          /* –î–µ—Å–∫—Ç–æ–ø–Ω–∞—è –≤–µ—Ä—Å–∏—è - 3 –∫–æ–ª–æ–Ω–∫–∏ */
          <div className="grid grid-cols-3 gap-4 mb-6">
            {/* –ë–ª–æ–∫ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ */}
            <div className="flex flex-col items-center justify-center p-4 rounded-lg bg-muted/30 h-[150px]">
              <Icon name="Clock" className="mb-2 mt-1 text-primary" size={24} />
              <div className="text-2xl font-bold text-foreground/80">
                {formatDuration(videoDuration)}
              </div>
              <div className="text-sm text-muted-foreground/90">
                –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å
              </div>
            </div>

            {/* –ë–ª–æ–∫ —è–∑—ã–∫–∞ –ø–µ—Ä–µ–≤–æ–¥–∞ */}
            <div className="flex flex-col items-center justify-center p-4 rounded-lg bg-muted/30 h-[150px]">
              {isLoading || isLoadingLanguages ? (
                <>
                  <Icon
                    name="Translate"
                    className="mb-2 text-primary"
                    size={24}
                  />
                  <div className="text-2xl font-bold flex items-center text-foreground/80">
                    <Icon
                      name="Loader2"
                      className="mr-2 w-5 h-5 animate-spin text-primary"
                    />
                    <span>–ó–∞–≥—Ä—É–∑–∫–∞...</span>
                  </div>
                </>
              ) : (
                <>
                  <div className="text-3xl mb-1">{languageInfo.flag}</div>
                  <div className="text-2xl font-bold mb-0 text-foreground/80">
                    –Ø–∑—ã–∫
                  </div>
                  <div className="text-sm text-muted-foreground/90 text-center">
                    {languageInfo.name}
                  </div>
                </>
              )}
            </div>

            {/* –ë–ª–æ–∫ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ */}
            <div className="flex flex-col items-center justify-center p-4 rounded-lg bg-muted/30 h-[150px]">
              <Icon
                name="Wallet"
                className="mb-2 mt-1 text-primary"
                size={24}
              />
              <div className="text-2xl font-bold text-foreground/80">{`${totalPrice} ‚ÇΩ`}</div>
              <div className="text-sm text-muted-foreground/90">{`${roundedMinutes} –º–∏–Ω √ó ${pricePerMinute} ‚ÇΩ`}</div>
            </div>
          </div>
        )}

        {/* –í–≤–æ–¥ –ø–æ—á—Ç—ã */}
        <div className="mb-6">
          <div className="h-6 mb-2 flex items-center">
            <Label
              htmlFor="email"
              className={`text-sm font-normal ${emailError ? "text-red-500" : "text-muted-foreground"}`}
            >
              {emailError || "–£–∫–∞–∂–∏—Ç–µ –ø–æ—á—Ç—É –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞"}{" "}
              <span className="text-primary">*</span>
            </Label>
          </div>
          <div className="relative">
            <Input
              id="email"
              type="email"
              placeholder="example@mail.ru"
              value={email}
              onChange={handleEmailChange}
              className={`focus-visible:ring-0 focus-visible:ring-offset-0 border-2 
                ${emailError ? "border-red-500" : email && !emailError ? "border-green-500" : "border-primary/30"}`}
            />
          </div>
        </div>

        {/* –ö–Ω–æ–ø–∫–∞ –æ–ø–ª–∞—Ç—ã */}
        <Button
          className="w-full py-6 text-lg"
          onClick={handlePayButtonClick}
          disabled={isProcessing}
        >
          {getButtonText()}
        </Button>

        <div className="mt-4 text-xs text-center text-muted-foreground">
          –ù–∞–∂–∏–º–∞—è –∫–Ω–æ–ø–∫—É, –≤—ã —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å —Å –Ω–∞—à–µ–π{" "}
          <a href="/offer" className="underline hover:text-primary">
            –æ—Ñ–µ—Ä—Ç–æ–π
          </a>{" "}
          –∏{" "}
          <a href="/confidentiality" className="underline hover:text-primary">
            –ø–æ–ª–∏—Ç–∏–∫–æ–π –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏
          </a>
        </div>

        <div className="mt-4 flex items-center justify-center space-x-1 text-muted-foreground">
          <Icon name="Shield" size={16} />
          <span className="text-xs">–ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –æ–ø–ª–∞—Ç–∞ —á–µ—Ä–µ–∑ CloudPayments</span>
        </div>
      </CardContent>
    </Card>
  );
};

export default OrderDetails;
